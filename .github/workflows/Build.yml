name: Build and Convert Java to Smali

on:
  push:
    branches:
      - main  # Change this as necessary
  pull_request:
    branches:
      - main  # Change this as necessary

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up the Java environment
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'  # Ensure this matches the Java version you need

    # Step 3: Install Android NDK (r22)
    - name: Install Android NDK r22
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r22-linux.zip
        unzip android-ndk-r22-linux.zip -d $HOME/ndk
        export PATH=$PATH:$HOME/ndk/android-ndk-r22

    # Step 4: Compile Java code to .class files
    - name: Compile Java to .class
      run: |
        mkdir -p build/classes
        javac -d build/classes src/**/*.java  # Adjust this to your project structure

    # Step 5: Convert .class files to .dex format (using dx or d8)
    - name: Convert .class to .dex
      run: |
        $HOME/ndk/android-ndk-r22/build/ndk-build  # If you need to use ndk-build for any custom builds
        # Use dx (or d8) to convert .class to .dex
        $HOME/ndk/android-ndk-r22/tools/dx --dex --output=build/classes.dex build/classes

    # Step 6: Decompile .dex to Smali using apktool or JADX
    - name: Convert .dex to Smali using Apktool
      run: |
        wget https://github.com/iBotPeaches/Apktool/releases/download/v2.5.0/apktool_2.5.0.jar -O apktool.jar
        java -jar apktool.jar d build/classes.dex -o build/smali

    # Step 7: Archive the results (optional)
    - name: Upload Smali Files as Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: smali-files
        path: build/smali
